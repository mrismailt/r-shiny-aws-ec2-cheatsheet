Steps to creating an AWS EC2 R Shiny instance:

Ubuntu Server 20.04 LTS (HVM), SSD Volume Type - ami-02ae530dacc099fc9

Ubuntu Server 20.04 LTS (HVM),EBS General Purpose (SSD) Volume Type. Support available from Canonical (http://www.ubuntu.com/cloud/services).
Root Device Type: ebs Virtualization type: hvm

https://towardsdatascience.com/how-to-host-a-r-shiny-app-on-aws-cloud-in-7-simple-steps-5595e7885722
	SSH My IP
	Custom TCP 3838 Anywhere
	"Load" .pem and "Save private key" as .ppk using PuTTYgen
	Elastic IP

	sudo apt-get update
	sudo apt-get install r-base
	sudo apt-get install r-base-dev

	Install package shiny
		install.packages("shiny")
		Need httpuv? sudo apt-get install r-cran-httpuv
		#Need Rcpp ubuntu 16? sudo apt-get install r-cran-rcpp

/*https://www.r-bloggers.com/install-shiny-server-for-r-on-ubuntu-the-right-way/
	sudo apt-get install -y libcurl4-openssl-dev 
	sudo apt-get install -y libxml2-dev
	sudo apt-get install -y openjdk-7-jdk
	export LD_LIBRARY_PATH=/usr/lib/jvm/java-7-openjdk-	amd64/jre/lib/amd64/server
	sudo R CMD javareconf*/

https://rstudio.com/products/shiny/download-server/ubuntu/
	sudo apt-get install gdebi-core
	wget https://download3.rstudio.org/ubuntu-14.04/x86_64/shiny-server-1.5.14.948-amd64.deb
	sudo gdebi shiny-server-1.5.14.948-amd64.deb

sudo chmod 777 /srv/shiny-server
#sudo chmod -R 777 /srv
sudo mkdir /srv/shiny-server/myapp
sudo chmod 777 /etc/shiny-server
#sudo chmod -R 777 /etc
	#shiny-server.conf
		#location /myapp {
		#site_dir /srv/shiny-server/myapp;

dbplyr problem? update tibble
shinymanager problem bunutu 16? no openssl? sudo apt-get install libssl-dev
pdftools problem ubuntu 16? no libcurl4-openssl-dev? sudo apt-get install libcurl4-openssl-dev
	no poppler-cpp? sudo add-apt-repository -y ppa:cran/poppler
		sudo apt-get update
		sudo apt-get install -y libpoppler-cpp-dev
RPostgres problem? no libpq? sudo apt-get install libpq-dev

Apache2 Web Server
	https://www.r-bloggers.com/shiny-https-securing-shiny-open-source-with-ssl/
	Generate a key: openssl genrsa -out /etc/ssl/private/apache.key 2048
	Create our SSL certificate: openssl req -new -x509 -key /etc/ssl/private/apache.key -days 365 -sha256 -out /etc/ssl/certs/apache.crt
	apt-get install apache2
	aptitude install -y build-essential
	aptitude install -y libapache2-mod-proxy-html libxml2-dev
		no aptitude? apt install aptitude
		no package that match libapache2-mod-proxy-html? a2enmod proxy_html
			systemctl restart apache2
		or it is already there under another name so just run aptitude install -y libxml2-dev
	apache installed. To install ssl and proxy modules in apache: a2enmod
		type the following: ssl proxy proxy_ajp proxy_http rewrite deflate headers proxy_balancer proxy_connect proxy_html
		systemctl restart apache2

	configure apache to forward https calls to http port 3838: nano /etc/apache2/sites-enabled/000-default.conf
	<VirtualHost *:*>
	 SSLEngine on
	 SSLCertificateFile /etc/ssl/certs/apache.crt
	 SSLCertificateKeyFile /etc/ssl/private/apache.key
	
	 ProxyPreserveHost On
	 ProxyPass / http://0.0.0.0:3838/
	 ProxyPassReverse / http://0.0.0.0:3838/

	 ServerName localhost
	</VirtualHost>
		This turns on SSL for apache server, pointing to the certificate
		Forwards all incoming https calls to http port 3838
	restart apache: service apache2 restart

domain name: freenom.com

real ssl certificate: https://certbot.eff.org/lets-encrypt/ubuntufocal-apache

Routing 80 to 443
https://serverfault.com/questions/803776/serving-port-443-over-http-creates-400-bad-request-error-instead-of-redirect
<VirtualHost *:80>

    -- snip --

    RewriteEngine On
    RewriteCond %{HTTPS} off
    RewriteRule (.*) https://%{HTTP_HOST}%{REQUEST_URI} [R,L]

</VirtualHost>


<VirtualHost *:443>

    -- snip --

    SSLEngine on
    SSLCertificateFile /var/www/ssl/STAR_iconcierge_net_au.crt
    SSLCertificateKeyFile /var/www/ssl/STAR_iconcierge_net_au.key
    SSLCertificateChainFile /var/www/ssl/STAR_iconcierge_net_au.crt

</VirtualHost>